# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: |
          COREPACK_PATH=$HOME/.local/bin
          mkdir -p $COREPACK_PATH
          eval "$(echo PATH=$COREPACK_PATH:\$PATH | tee -a $BASH_ENV)"
          corepack enable --install-directory $COREPACK_PATH
          yarn install --immutable
          yarn --version
      - run: yarn run eslint
      - run: yarn run eslint-ts
      - run: yarn run test

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: |
          COREPACK_PATH=$HOME/.local/bin
          mkdir -p $COREPACK_PATH
          eval "$(echo PATH=$COREPACK_PATH:\$PATH | tee -a $BASH_ENV)"
          corepack enable --install-directory $COREPACK_PATH
          yarn install --immutable
          yarn --version
      - run: yarn build

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: |
          COREPACK_PATH=$HOME/.local/bin
          mkdir -p $COREPACK_PATH
          eval "$(echo PATH=$COREPACK_PATH:\$PATH | tee -a $BASH_ENV)"
          corepack enable --install-directory $COREPACK_PATH
          yarn install --immutable
          yarn --version
      - run: yarn build
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
